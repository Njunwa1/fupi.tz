// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: url/url.proto

package url

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UrlType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UrlType) Reset() {
	*x = UrlType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlType) ProtoMessage() {}

func (x *UrlType) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlType.ProtoReflect.Descriptor instead.
func (*UrlType) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{0}
}

func (x *UrlType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebUrl      string `protobuf:"bytes,1,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	CustomAlias string `protobuf:"bytes,4,opt,name=customAlias,proto3" json:"customAlias,omitempty"`
	Password    string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	ExpiryAt    string `protobuf:"bytes,6,opt,name=expiry_at,json=expiryAt,proto3" json:"expiry_at,omitempty"`
	QrcodeUrl   string `protobuf:"bytes,7,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcode_url,omitempty"`
	AppleUrl    string `protobuf:"bytes,8,opt,name=apple_url,json=appleUrl,proto3" json:"apple_url,omitempty"`
	AndroidUrl  string `protobuf:"bytes,9,opt,name=android_url,json=androidUrl,proto3" json:"android_url,omitempty"`
}

func (x *CreateUrlRequest) Reset() {
	*x = CreateUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUrlRequest) ProtoMessage() {}

func (x *CreateUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUrlRequest.ProtoReflect.Descriptor instead.
func (*CreateUrlRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{1}
}

func (x *CreateUrlRequest) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

func (x *CreateUrlRequest) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *CreateUrlRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateUrlRequest) GetCustomAlias() string {
	if x != nil {
		return x.CustomAlias
	}
	return ""
}

func (x *CreateUrlRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUrlRequest) GetExpiryAt() string {
	if x != nil {
		return x.ExpiryAt
	}
	return ""
}

func (x *CreateUrlRequest) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *CreateUrlRequest) GetAppleUrl() string {
	if x != nil {
		return x.AppleUrl
	}
	return ""
}

func (x *CreateUrlRequest) GetAndroidUrl() string {
	if x != nil {
		return x.AndroidUrl
	}
	return ""
}

type CreateUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Short       string `protobuf:"bytes,2,opt,name=short,proto3" json:"short,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	CustomAlias string `protobuf:"bytes,4,opt,name=customAlias,proto3" json:"customAlias,omitempty"`
	Password    string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	ExpiryAt    string `protobuf:"bytes,6,opt,name=expiry_at,json=expiryAt,proto3" json:"expiry_at,omitempty"`
	QrcodeUrl   string `protobuf:"bytes,7,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcode_url,omitempty"`
	AppleUrl    string `protobuf:"bytes,8,opt,name=apple_url,json=appleUrl,proto3" json:"apple_url,omitempty"`
	AndroidUrl  string `protobuf:"bytes,9,opt,name=android_url,json=androidUrl,proto3" json:"android_url,omitempty"`
	WebUrl      string `protobuf:"bytes,10,opt,name=web_url,json=webUrl,proto3" json:"web_url,omitempty"`
}

func (x *CreateUrlResponse) Reset() {
	*x = CreateUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUrlResponse) ProtoMessage() {}

func (x *CreateUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUrlResponse.ProtoReflect.Descriptor instead.
func (*CreateUrlResponse) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{2}
}

func (x *CreateUrlResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateUrlResponse) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *CreateUrlResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateUrlResponse) GetCustomAlias() string {
	if x != nil {
		return x.CustomAlias
	}
	return ""
}

func (x *CreateUrlResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateUrlResponse) GetExpiryAt() string {
	if x != nil {
		return x.ExpiryAt
	}
	return ""
}

func (x *CreateUrlResponse) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *CreateUrlResponse) GetAppleUrl() string {
	if x != nil {
		return x.AppleUrl
	}
	return ""
}

func (x *CreateUrlResponse) GetAndroidUrl() string {
	if x != nil {
		return x.AndroidUrl
	}
	return ""
}

func (x *CreateUrlResponse) GetWebUrl() string {
	if x != nil {
		return x.WebUrl
	}
	return ""
}

type GetUrlByKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortUrl string `protobuf:"bytes,1,opt,name=shortUrl,proto3" json:"shortUrl,omitempty"`
}

func (x *GetUrlByKeyRequest) Reset() {
	*x = GetUrlByKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUrlByKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlByKeyRequest) ProtoMessage() {}

func (x *GetUrlByKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlByKeyRequest.ProtoReflect.Descriptor instead.
func (*GetUrlByKeyRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{3}
}

func (x *GetUrlByKeyRequest) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

type GetUrlsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUrlsForUserRequest) Reset() {
	*x = GetUrlsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUrlsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlsForUserRequest) ProtoMessage() {}

func (x *GetUrlsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlsForUserRequest.ProtoReflect.Descriptor instead.
func (*GetUrlsForUserRequest) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{4}
}

func (x *GetUrlsForUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UrlClick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UrlId     string `protobuf:"bytes,2,opt,name=url_id,json=urlId,proto3" json:"url_id,omitempty"`
	Ip        string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Country   string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	City      string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
	Device    string `protobuf:"bytes,6,opt,name=device,proto3" json:"device,omitempty"`
	Browser   string `protobuf:"bytes,7,opt,name=browser,proto3" json:"browser,omitempty"`
	Os        string `protobuf:"bytes,8,opt,name=os,proto3" json:"os,omitempty"`
	Referrer  string `protobuf:"bytes,9,opt,name=referrer,proto3" json:"referrer,omitempty"`
	CreatedAt string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UrlClick) Reset() {
	*x = UrlClick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClick) ProtoMessage() {}

func (x *UrlClick) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClick.ProtoReflect.Descriptor instead.
func (*UrlClick) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{5}
}

func (x *UrlClick) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UrlClick) GetUrlId() string {
	if x != nil {
		return x.UrlId
	}
	return ""
}

func (x *UrlClick) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UrlClick) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UrlClick) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UrlClick) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *UrlClick) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *UrlClick) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *UrlClick) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *UrlClick) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UrlClickAggregates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country  string `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	City     string `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Device   string `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
	Browser  string `protobuf:"bytes,4,opt,name=browser,proto3" json:"browser,omitempty"`
	Os       string `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	Referrer string `protobuf:"bytes,6,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Count    int64  `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UrlClickAggregates) Reset() {
	*x = UrlClickAggregates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlClickAggregates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlClickAggregates) ProtoMessage() {}

func (x *UrlClickAggregates) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlClickAggregates.ProtoReflect.Descriptor instead.
func (*UrlClickAggregates) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{6}
}

func (x *UrlClickAggregates) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UrlClickAggregates) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UrlClickAggregates) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *UrlClickAggregates) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *UrlClickAggregates) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *UrlClickAggregates) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *UrlClickAggregates) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UrlForUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Original    string              `protobuf:"bytes,2,opt,name=original,proto3" json:"original,omitempty"`
	Short       string              `protobuf:"bytes,3,opt,name=short,proto3" json:"short,omitempty"`
	Type        string              `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	CustomAlias string              `protobuf:"bytes,5,opt,name=customAlias,proto3" json:"customAlias,omitempty"`
	Password    string              `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	ExpiryAt    string              `protobuf:"bytes,7,opt,name=expiry_at,json=expiryAt,proto3" json:"expiry_at,omitempty"`
	QrcodeUrl   string              `protobuf:"bytes,8,opt,name=qrcode_url,json=qrcodeUrl,proto3" json:"qrcode_url,omitempty"`
	Aggregates  *UrlClickAggregates `protobuf:"bytes,9,opt,name=aggregates,proto3" json:"aggregates,omitempty"`
}

func (x *UrlForUser) Reset() {
	*x = UrlForUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UrlForUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlForUser) ProtoMessage() {}

func (x *UrlForUser) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlForUser.ProtoReflect.Descriptor instead.
func (*UrlForUser) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{7}
}

func (x *UrlForUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UrlForUser) GetOriginal() string {
	if x != nil {
		return x.Original
	}
	return ""
}

func (x *UrlForUser) GetShort() string {
	if x != nil {
		return x.Short
	}
	return ""
}

func (x *UrlForUser) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UrlForUser) GetCustomAlias() string {
	if x != nil {
		return x.CustomAlias
	}
	return ""
}

func (x *UrlForUser) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UrlForUser) GetExpiryAt() string {
	if x != nil {
		return x.ExpiryAt
	}
	return ""
}

func (x *UrlForUser) GetQrcodeUrl() string {
	if x != nil {
		return x.QrcodeUrl
	}
	return ""
}

func (x *UrlForUser) GetAggregates() *UrlClickAggregates {
	if x != nil {
		return x.Aggregates
	}
	return nil
}

type GetUrlsForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Urls []*UrlForUser `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *GetUrlsForUserResponse) Reset() {
	*x = GetUrlsForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_url_url_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUrlsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlsForUserResponse) ProtoMessage() {}

func (x *GetUrlsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_url_url_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlsForUserResponse.ProtoReflect.Descriptor instead.
func (*GetUrlsForUserResponse) Descriptor() ([]byte, []int) {
	return file_url_url_proto_rawDescGZIP(), []int{8}
}

func (x *GetUrlsForUserResponse) GetUrls() []*UrlForUser {
	if x != nil {
		return x.Urls
	}
	return nil
}

var File_url_url_proto protoreflect.FileDescriptor

var file_url_url_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x75, 0x72, 0x6c, 0x2f, 0x75, 0x72, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a,
	0x07, 0x55, 0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x02, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x9e, 0x02, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x70, 0x6c, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x65, 0x62, 0x55, 0x72, 0x6c, 0x22, 0x30, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22,
	0x2f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0xec, 0x01, 0x0a, 0x08, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x75, 0x72, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x72, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xb6, 0x01, 0x0a, 0x12, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x91, 0x02, 0x0a, 0x0a, 0x55, 0x72, 0x6c,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x79, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x55, 0x72,
	0x6c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x0a, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x22, 0x39, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x55, 0x72, 0x6c, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x32, 0xd9, 0x02, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x12,
	0x4e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x72, 0x6c, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x13,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x73,
	0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x72, 0x6c, 0x2f, 0x61, 0x6c, 0x6c, 0x12, 0x69, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69, 0x63,
	0x6b, 0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x42, 0x79, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x69,
	0x63, 0x6b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x72,
	0x6c, 0x2f, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55,
	0x72, 0x6c, 0x7d, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4e, 0x6a, 0x75, 0x6e, 0x77, 0x61, 0x31, 0x2f, 0x66, 0x75, 0x70, 0x69, 0x2e, 0x74,
	0x7a, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x75, 0x72, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_url_url_proto_rawDescOnce sync.Once
	file_url_url_proto_rawDescData = file_url_url_proto_rawDesc
)

func file_url_url_proto_rawDescGZIP() []byte {
	file_url_url_proto_rawDescOnce.Do(func() {
		file_url_url_proto_rawDescData = protoimpl.X.CompressGZIP(file_url_url_proto_rawDescData)
	})
	return file_url_url_proto_rawDescData
}

var file_url_url_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_url_url_proto_goTypes = []interface{}{
	(*UrlType)(nil),                // 0: UrlType
	(*CreateUrlRequest)(nil),       // 1: CreateUrlRequest
	(*CreateUrlResponse)(nil),      // 2: CreateUrlResponse
	(*GetUrlByKeyRequest)(nil),     // 3: GetUrlByKeyRequest
	(*GetUrlsForUserRequest)(nil),  // 4: GetUrlsForUserRequest
	(*UrlClick)(nil),               // 5: UrlClick
	(*UrlClickAggregates)(nil),     // 6: UrlClickAggregates
	(*UrlForUser)(nil),             // 7: UrlForUser
	(*GetUrlsForUserResponse)(nil), // 8: GetUrlsForUserResponse
}
var file_url_url_proto_depIdxs = []int32{
	6, // 0: UrlForUser.aggregates:type_name -> UrlClickAggregates
	7, // 1: GetUrlsForUserResponse.urls:type_name -> UrlForUser
	1, // 2: Url.Create:input_type -> CreateUrlRequest
	3, // 3: Url.GetUrlByKey:input_type -> GetUrlByKeyRequest
	4, // 4: Url.GetAllUrlsForUser:input_type -> GetUrlsForUserRequest
	3, // 5: Url.GetAggregatedUrlClicks:input_type -> GetUrlByKeyRequest
	2, // 6: Url.Create:output_type -> CreateUrlResponse
	2, // 7: Url.GetUrlByKey:output_type -> CreateUrlResponse
	8, // 8: Url.GetAllUrlsForUser:output_type -> GetUrlsForUserResponse
	6, // 9: Url.GetAggregatedUrlClicks:output_type -> UrlClickAggregates
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_url_url_proto_init() }
func file_url_url_proto_init() {
	if File_url_url_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_url_url_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUrlByKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUrlsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlClickAggregates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UrlForUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_url_url_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUrlsForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_url_url_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_url_url_proto_goTypes,
		DependencyIndexes: file_url_url_proto_depIdxs,
		MessageInfos:      file_url_url_proto_msgTypes,
	}.Build()
	File_url_url_proto = out.File
	file_url_url_proto_rawDesc = nil
	file_url_url_proto_goTypes = nil
	file_url_url_proto_depIdxs = nil
}
