syntax = "proto3";

option go_package = "github.com/Njunwa1/fupi.tz/shortener/proto/url";
import "google/api/annotations.proto";

message UrlType {
  string name = 1;
}

message CreateUrlRequest {
  string web_url = 1;
  string short = 2;
  string type = 3;
  string customAlias = 4;
  string password = 5;
  string expiry_at = 6;
  string qrcode_url = 7;
  string apple_url = 8;
  string android_url = 9;
}

message CreateUrlResponse {
  string id = 1;
  string short = 2;
  string type = 3;
  string customAlias = 4;
  string password = 5;
  string expiry_at = 6;
  string qrcode_url = 7;
  string apple_url = 8;
  string android_url = 9;
  string web_url = 10;
}

message GetUrlByKeyRequest {
  string shortUrl = 1;
}

message GetUrlsForUserRequest {
  string userId = 1;
}

message UrlClick {
  string id = 1;
  string url_id = 2;
  string ip = 3;
  string country = 4;
  string city = 5;
  string device = 6;
  string browser = 7;
  string os = 8;
  string referrer = 9;
  string created_at = 10;
}

message UrlClickAggregates {
  string  country = 1;
  string  city = 2;
  string  device = 3;
  string  browser = 4;
  string  os = 5;
  string  referrer = 6;
  int64   count = 7;
}

message UrlForUser {
  string id = 1;
  string original = 2;
  string short = 3;
  string type = 4;
  string customAlias = 5;
  string password = 6;
  string expiry_at = 7;
  string qrcode_url = 8;
  UrlClickAggregates aggregates = 9;
}

message GetUrlsForUserResponse {
  repeated UrlForUser urls = 1;
}

service Url {
  rpc Create(CreateUrlRequest) returns (CreateUrlResponse){
    option (google.api.http) = {
      post: "/api/v1/url/create"
      body: "*"
    };
  }

  rpc GetUrlByKey(GetUrlByKeyRequest) returns (CreateUrlResponse){}

  rpc GetAllUrlsForUser(GetUrlsForUserRequest) returns (GetUrlsForUserResponse){
    option (google.api.http) = {
      get: "/api/v1/url/all"
    };
  }

  rpc GetAggregatedUrlClicks(GetUrlByKeyRequest) returns (UrlClickAggregates){
    option (google.api.http) = {
      get: "/api/v1/url/clicks/{shortUrl}"
    };
  }
}

